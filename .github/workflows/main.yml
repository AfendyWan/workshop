name: Docker Image CI (Windows Runner)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: [self-hosted, Windows]

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Build lightweight multi-stage Docker image
      - name: Build lightweight Docker image
        id: build-image
        shell: pwsh
        run: |
          $IMAGE_NAME = "my-lightweight-app"
          $TAG = [int][double]::Parse((Get-Date -UFormat %s))
          docker build . -f Dockerfile -t "$IMAGE_NAME`:$TAG"
          echo "IMAGE_NAME=$IMAGE_NAME" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "TAG=$TAG" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "âœ… Built image $IMAGE_NAME:$TAG"

      # Step 3: Run Trivy vulnerability scanner (Windows-compatible)
      - name: Run Trivy vulnerability scanner
        shell: pwsh
        run: |
          trivy image "$env:IMAGE_NAME`:$env:TAG" --severity CRITICAL,HIGH --ignore-unfixed --exit-code 0 --format table

      # Step 4: Show image size
      - name: Show image size
        shell: pwsh
        run: docker images "$env:IMAGE_NAME`:$env:TAG"

      # Step 5: Clean up Docker cache
      - name: Cleanup Docker cache
        if: always()
        shell: pwsh
        run: |
          echo "ðŸ§¹ Cleaning up Docker..."
          docker system prune -af --volumes
          echo "âœ… Cleanup complete!"
